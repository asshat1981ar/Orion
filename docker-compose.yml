version: '3.8'

services:
  # Core Orchestrator Service
  orchestrator:
    build: ./backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - NEO4J_URI=bolt://neo4j:7687
      - REDIS_URL=redis://redis:6379
      - PORT=3001
    depends_on:
      - neo4j
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    restart: unless-stopped
    networks:
      - orion-network

  # Frontend Dashboard  
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3001
      - NODE_ENV=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - orchestrator
    restart: unless-stopped
    networks:
      - orion-network

  # Neo4j Knowledge Graph Database
  neo4j:
    image: neo4j:5.15
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_server_memory_heap_initial__size=512m
      - NEO4J_server_memory_heap_max__size=1g
    volumes:
      - neo4j-data:/data
      - neo4j-logs:/logs
    restart: unless-stopped
    networks:
      - orion-network

  # Redis Memory Store
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - orion-network
    command: redis-server --appendonly yes

  # MCP Registry Service
  mcp-registry:
    build: ./mcp-registry
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=development
      - PORT=4000
    volumes:
      - ./mcp-registry:/app
      - /app/node_modules
    restart: unless-stopped
    networks:
      - orion-network

  # Ghost Graph Sidecar
  ghost-graph:
    build: ./ghost-graph
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - NEO4J_URI=bolt://neo4j:7687
      - PORT=5000
    depends_on:
      - neo4j
    volumes:
      - ./ghost-graph:/app
      - /app/node_modules
    restart: unless-stopped
    networks:
      - orion-network

  # Agent Auto-Forge
  agent-forge:
    build: ./agent-forge
    ports:
      - "5001:5001"
    environment:
      - NODE_ENV=development
      - PORT=5001
    volumes:
      - ./agent-forge:/app
      - /app/node_modules
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    networks:
      - orion-network

volumes:
  neo4j-data:
  neo4j-logs:
  redis-data:

networks:
  orion-network:
    driver: bridge